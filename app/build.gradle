apply plugin: "com.android.application"
apply plugin: "org.owasp.dependencycheck"

def getGitVersion = { ->
    try {
        return "git -C ${rootDir} describe --tags --always --dirty".execute().text.trim()
    }
    catch (ignored) {
        return "git-not-found"
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        applicationId "org.simlar"
        minSdkVersion 16
        targetSdkVersion 28
        versionName getGitVersion()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"

    productFlavors {
        push {
            dimension "default"
            versionName = android.defaultConfig.versionName
            buildConfigField("boolean", "IS_FCM_ENABLED", "true")
        }

        alwaysOnline {
            dimension "default"
            versionName = android.defaultConfig.versionName + " (alwaysOnline)"
            buildConfigField("boolean", "IS_FCM_ENABLED", "false")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.txt"
        }
    }

    lintOptions {
        checkAllWarnings true
        disable "GoogleAppIndexingWarning"
        warningsAsErrors true
    }
}

dependencyCheck {
    suppressionFile = "owasp-dependency-check-suppression.xml"
    failBuildOnCVSS = 0
}
connectedCheck.dependsOn dependencyCheckAnalyze

ext {
    androidSupportVersion = "28.0.0"
}

dependencies {
    pushImplementation "com.google.firebase:firebase-core:16.0.3"
    pushImplementation "com.google.firebase:firebase-messaging:17.3.2"
    implementation "com.android.support:appcompat-v7:${androidSupportVersion}"
    implementation "com.android.support:support-v4:${androidSupportVersion}"
    implementation "com.android.support:support-v13:${androidSupportVersion}"
    implementation "com.googlecode.libphonenumber:libphonenumber:8.9.15"
    implementation fileTree(dir: "libs", include: ["liblinphone-sdk-release.aar"])
}

if (useGoogleServices()) {
    println("using push notifications")
    apply plugin: "com.google.gms.google-services"
} else {
    println("not using push notifications")
}
